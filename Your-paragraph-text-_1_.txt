Integration:                                           %backward Interpolation                            %forward Interpolation                                %Euler's Method                      2D                       3D
x = input('Enter xi values: ');                        x = input('Enter xi values as an array: '); x = input('Enter xi values as an array: '); syms x                                                x=-2:0.001:4;            t = 0:0.001:6*pi;
y = input('Enter yi values: ');                        y = input('Enter yi values as an array: '); y = input('Enter yi values as an array: '); syms y                                                y=3.*x.^3-26.*x+10;      x = sqrt(t).*sin(2.*t);
h = x(2)-x(1);                                         X = input('Enter X value: ');                      X = input('Enter X value: ');                         f(x,y) = input("Enter f(x,y)")       subplot(2,3,1);          y = sqrt(t).*cos(2.*t);
                                                                                                                                                                                                     plot(x,y,"r")            z= t/2;
n = length(x);                                         h = x(2) - x(1);                                   h = x(2) - x(1);                                      y1 = input("Enter y1 value")
                                                                                                                                                                                                                              subplot(2,2,1)
if mod(n-1,2) == 0                                     n = length(x);                                     n = length(x);                                        x1 = input("Enter x1 value")
                                                                                                                                                                                                     xlabel("X axis")         plot3(x,y,z,"r")
 disp("Using Simpson's 1/3rd rule");                   D = zeros(n);                                      D = zeros(n);                                         h = input("Enter Step Size")
                                                                                                                                                                                                     ylabel("Y axis")         xlabel("X axis")
 I = y(1)+y(n);                                        for i = 1:n                                        for i = 1:n                                           X = input("Enter X value")           title("1st Graph")       ylabel("Y axis")
 for i = 2:2:n-1                                        D(i,1) = y(i);                                     D(i,1) = y(i);                                       n = (X - x1)/h                       grid on;                 zlabel("Z axis")
 I = I+4*y(i);                                         end                                                end                                                   x = x1:h:X                           %%                       title("3D line plot")
 end                                                   for j = 2:n                                        for j = 2:n                                           y = zeros(1, n+1)                    x=-2:0.001:4;            x = -4:0.1:4;
 for i = 3:2:n-2                                        for i = n:-1:j                                     for i = 1:(n - j + 1)                                y(1) = y1                            y=9.*x.^2-26;            y = -4:0.1:4;
 I =I+2*y(i);                                           D(i,j) = D(i,j-1) - D(i-1,j-1);                    D(i,j) = D(i + 1, j - 1) - D(i, j - 1);              for i = 2 : (n+1)                    subplot(2,3,2);          [x1,y1]=meshgrid(x,y)
 end                                                    end                                                end                                                   y(i) = y(i-1) + h * f(x(i-1),y(i-   plot(x,y,"b")            z = (x1.^2 + (3.*y1.^2)).*exp(1-x1.^2-y1.^2);
 I = (h/3)*I;                                          end                                                end                                                   1))                                  xlabel("X axis")         subplot(2,2,2)
else                                                   Y = y(n);                                          Y = y(1);                                             end                                  ylabel("Y axis")         mesh(x1,y1,z)
 disp("Using Trapezoidal rule");                       product = 1;                                       product = 1;                                          disp(y(n+1))                         title("2nd Graph")       xlabel("x-axis")
 I = 0;                                                fact = 1;                                          fact = 1;                                                                                  %%                       ylabel("y-axis")
                                                                                                                                                                                                     x=-2:0.001:4;            zlabel("z-axis")
 for i = 2:(n-1)                                       for i = 1:(n - 1)                                  for i = 1:(n - 1)
                                                                                                                                                                                                     y=18.*x;                 title("MESHPLOT")
 I = I+y(i);                                            product = product * (X - x(n - i + 1)) / h; product = product * (X - x(i)) / h;
                                                                                                                                                                                                     subplot(2,3,3);          x = -6:0.3:6;
 end                                                    fact = fact * (1 / i);                             fact = fact * (1 / i);
                                                                                                                                                                                                     plot(x,y,"b")            y = -6:0.3:6;
 I = I*2+y(1)+y(n);                                     Y = Y + (product * fact * D(n, i + 1));            Y = Y + (product * fact * D(1, i + 1));                                                   xlabel("X axis")         [x1 y1] = meshgrid(x,y);
 I = (h/2)*I;                                          end                                                end                                                                                        ylabel("Y axis")         z = sin(sqrt(x1.^2 + y1.^2))./(sqrt(x1.^2 + y1.^2));
end                                                    fprintf('Interpolated value Y = %f\n',             fprintf('Interpolated value Y = %f\n',                                                                                                               % Data points
                                                                                                                                                                                                     title("3rd Graph")       subplot(2,2,3)
                                                                                                                                                                                                                                                               x = [10^7, 1.1*10^7, 1.2*10^7, 1.3*10^7];
disp(["The integral result is: ",                      Y);                                                Y);                                                                                        %%                       surf(x1,y1,z)
                                                                                  %Runge-Kutta 4th-order                         %lagrange interpolation                                                                                                       y = [1, 2, 5, 10];
num2str(I)]);                                                                                                                                                                                        x=-2:0.001:4;            xlabel("x-axis")
%find poly of degree 3 for the data points , also create graph that               syms x                                         x = input('Enter x values : ');                                     y=18;                    ylabel("y-axis")
shows                                                                                                                                                                                                                                                          % Fit a quadratic polynomial (degree 2)
                                                                                  syms y                                         y = input('Enter y values : ');                                     subplot(2,3,4);          zlabel("z-axis")
%given data pts and poly function on same set of axes.                                                                                                                                                                                                         p = polyfit(x, y, 2);
                                                                                  f(x, y) = input("Enter f(x,y): ");             X = input('Enter the y value to interpolate:                        plot(x,y,"b")            title("SURFPLOT")
x = [-3,-2,-1,0,1,2,3];               Curve Fitting                               y1 = input("Enter y1 value: ");                ');                                                                 xlabel("X axis")
y = [-28,-9,-2,-1,0,7,26];                                                                                                                                                                                                                                     % Evaluate the polynomial at the points in x
                                      A = [-6 -4 -2 0 2 4 6]                      x1 = input("Enter x1 value: ");                n = length(x);                                                      ylabel("Y axis")         t = 1:0.001:6*pi;
P = polyfit(x,y,3)                                                                                                                                                                                                                                             y_fit = polyval(p, x);
plot(x,y,'*')
                                      B  = [-0.2 0.8 -1.6 3.5  3.1 4.9            h = input("Enter Step Size: ");                Y = 0;                                                              title("4th Graph")       x =( 2./t).*sin(2.*t);
title("Curve Fiting")                 3.9]                                        X = input("Enter X value: ");                  for i = 1:n;                                                        %%                       y = (2./t).*cos(2.*t);
                                                                                                                                                                                                                                                               % Create a range of x values for smooth plotting of the polynomial
xlabel("x-axis")                      P = polyfit(A,B,6)                          n = (X - x1)/h;                                 L=1;                                                               x=-2:0.001:4;            z = t./2;
                                                                                                                                                                                                                                                               curve
ylabel("y-axis")                      plot(A,B,'k')                                                                                                                                                  y=3.*x.^3-26.*x+10;      subplot(2,2,4)
                                                                                  x = x1:h:X;                                     for j = 1:n;                                                                                                                 x_range = linspace(min(x), max(x), 100);
hold on                               hold on                                                                                                                                                        subplot(2,3,6);          plot3(x,y,z,"r")
                                                                                  y = zeros(1, n+1);                              if i~=j                                                                                                                      y_range = polyval(p, x_range);
X=min(x):0.1:max(x);                                                                                                                                                                                 hold on                  xlabel("x-axis")
                                      A = min(A):2:max(A)                         y(1)  = y1;                                     L = L*(X - x(j)) / (x(i) - x(j));
Y=polyval(P,X);                                                                                                                                                                                      plot(x,y,"r")            ylabel("y-axis")
                                      B = polyval(P,A)                            for i = 2:(n+1)                                 end                                                                                                                          % Plot the data points
plot(X,Y)                                                                                                                                                                                                                     zlabel("z-axis")
%%                                    plot(A,B,'r')                                k1 = h * f(x(i-1), y(i-1));                    end                                                                                                                          figure;
                                                                                                                                                                                                     x=-2:0.001:4;            title("3DPLOT")
x =[-6,-4,-2,0,2,4,6];                hold off                                     k2 = h * f(x(i-1) + h/2, y(i-1) + k1/2); Y = Y + L * y(i);                                                                                                                  plot(x, y, 'ro', 'MarkerFaceColor', 'r'); % Data points in red
                                                                                                                                                                                                     y=9.*x.^2-26;
y = [-0.2,-0.8,-1.6,3.5,3.1,4.9,3.9];                                              k3 = h * f(x(i-1) + h/2, y(i-1) + k2/2); end                                                                                                                                hold on;
                                                                                                                                                                                                     plot(x,y,"b")
P = polyfit(x,y,6)       %%                                                        k4 = h * f(x(i-1) + h, y(i-1) + k3);          disp(['Interpolated value is: ', num2str(Y)]);
plot(x,y,'o')
                         x=[2,4,6,8,10,12,14,16]                                                                                                                                                                                                               % Plot the fitted quadratic polynomial curve
title("curve fitting")
                                                                                   y(i) = y(i-1) + (k1 + 2*k2 + 2*k3 + k4) /                                                                         x=-2:0.001:4;
                         y=[4.9,8.2,13.4,22.2,36.5,60.3,99.3,163.8];                                                                                                                                                                                           plot(x_range, y_range, 'b-', 'LineWidth', 2); % Polynomial in blue
xlabel("x-axis")                                                                  6;                                                                                                                 y=18.*x;
                         P = polyfit(x,y,7)                                       end                                                                                                                plot(x,y,"k")
ylabel("y-axis")                                                                                                                                                                                                                                               % Labels and title
                         plot(x,y,'r o')
hold on                                                                           disp(y(n+1));              x = (-3:3);                                                                                                                                       xlabel('x');
X=min(x):0.1:max(x); title("curve fitting")                                                                                                                                                          x=-2:0.001:4;
                     xlabel("x")                                                                             y = [-0.2774 0.8954 -1.5651 3.4564 3.0601 4.8568 3.988];                                                                                          ylabel('y');
Y=polyval(P,X);                                                                                                                                                                                      y=18;
                     ylabel("y")                        x=-4:0.25:4;                                         p = polyfit(x,y,3);                                                                                                                               title('Quadratic Polynomial Fit to Data Points');
plot(X,Y)                                                                                                                                                                                            plot(x,y,"g")
                       hold on                          y=-4:0.5:4;                                          x_fit = linspace(-3,3,100)                                                                                                                        legend('Data Points', 'Fitted Polynomial');
                                                                                                                                                                                                     xlabel("X");
                       X = min(x):0.1:max(x);           [X,Y]=meshgrid(x,y)                                  y_fit = polyval(p,x_fit)                                                                                                                          grid on;
                                                                                                                                                                                                     ylabel("Y");
                       Y = polyval(P,X);                Z=(X.^2+3.*Y.^2).*exp((1-X.^2-                       plot(x,y,"r--o","LineWidth",1.5);                                                                                                                 hold off;
                                                                                                                                                                                                     title("5th Graph");
                       plot(X,Y)                        Y.^2))                                               plot(x_fit, y_fit, "b-")
                                                                                                                                                                                                     legend("y = 3x^3 - 26x + 10", "y' = 9x^2 - 26", "y'' = 18x", "y''' =
                       hold off                         subplot(2,1,1),mesh(X,Y,Z)                           disp(p)
                                                                                                                                                                                                     18");
                                                        subplot(2,1,2),surf(X,Y,Z)
